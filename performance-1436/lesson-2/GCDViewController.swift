//
//  GCDViewController.swift
//  performance-1436
//
//  Created by Artur Igberdin on 20.09.2021.
//

import UIKit

class GCDViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

       
        //test1() //—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ main-–æ—á–µ—Ä–µ–¥–∏ –∏ global-–æ—á–µ—Ä–µ–¥–∏
        
        //test2() //–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤
        
        //test3() //–ø—Ä–æ–≤–µ—Ä–∫–∞ main-–æ—á–µ—Ä–µ–¥–∏ –Ω–∞ —Ç–æ —á—Ç–æ –æ–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è (serial)
        
        //test4() //–ø—Ä–æ–≤–µ—Ä–∫–∞ global-–æ—á–µ—Ä–µ–¥–∏ –Ω–∞ —Ç–æ —á—Ç–æ –æ–Ω–∞ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∞—è (concurrent)
        
        //test5() //sync –∑–∞–¥–∞—á–∞ –Ω–∞ global-–æ—á–µ—Ä–µ–¥–∏ —Å—Ç–∞–≤–∏—Ç—å—Å—è –Ω–∞ main-–ø–æ—Ç–æ–∫
        
        test6() //–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –æ—á–µ—Ä–µ–¥—å –∫–æ—Ç–æ—Ä–∞—è —è–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –Ω–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å concurrent
        
    }
    
    func test6() {
        let myQueue = DispatchQueue(label: "myQueue")
        
        myQueue.async {
            for _ in (0..<1000) {
                print("üòà")
            }
            print(Thread.current)
        }
        
        myQueue.async {
            for _ in (0..<1000) {
                print("üòá")
            }
            print(Thread.current)
        }
    }
    
    func test5() {
        
        DispatchQueue.global().sync {
            print(Thread.current)
            print("üòà")
        }
           
        print(Thread.current)
        print("üòá")
    }
    
    func test4() {
        DispatchQueue.global().async {
            print("H")
            print(Thread.current)
        }
        DispatchQueue.global().async {
            sleep(1)
            print("e")
            print(Thread.current)
        }
        DispatchQueue.global().async {
            print("l")
            print(Thread.current)
        }
        DispatchQueue.global().async {
            print("l")
            print(Thread.current)
        }
        DispatchQueue.global().async {
            
            sleep(1) //—É—Å—ã–ø–∏—Ç—å –Ω–∞ 1 —Å–µ–∫—É–Ω–¥—É
            print("o")
            print(Thread.current)
            
        }
    }
    
    func test3() {
        DispatchQueue.main.async { print("H") }
        DispatchQueue.main.async { print("e") }
        DispatchQueue.main.async { print("l") }
        DispatchQueue.main.async { print("l") }
        DispatchQueue.main.async { print("o") }
    }
    
    func test2() {
        
        DispatchQueue.main.async {
            for _ in (0..<10) {
                print("üòà")
            }
        }
        
        DispatchQueue.global(qos: .userInteractive).async {
            for _ in (0..<10) {
                print("üòá")
            }
        }

        DispatchQueue.global(qos: .userInitiated).async {
            for _ in (0..<10) {
                print("üëª")
            }
        }

        DispatchQueue.global(qos: .utility).async {
            for _ in (0..<10) {
                print("üëΩ")
            }
        }
    }
    
    func test1() {
        
        DispatchQueue.main.async {
            for _ in (0..<10000) {
                print("üòà")
            }
        }
        
        DispatchQueue.global(qos: .userInteractive).async {
            for _ in (0..<10000) {
                print("üòá")
            }
        }
    }



}
